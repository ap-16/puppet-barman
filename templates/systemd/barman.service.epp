<%- |
    String                             $postgres_server_id,
    String                             $barman_binary              = '/usr/bin/barman',
    String                             $conf_file_path             = '/etc/barman.conf',
    String                             $server_file_path,
    Optional[String]                   $assert_path_is_mount_point = undef,
    Optional[String]                   $more_unit_entries          = undef,
    Optional[String]                   $more_service_entries       = undef,
    Optional[String]                   $more_install_entries       = undef,
    | -%>
# managed by puppet!

[Unit]
Description            = barman service
Description            = starts barman backup for <%= $postgres_server_id %>

AssertFileIsExecutable = <%= $barman_binary %>
AssertFileNotEmpty     = <%= $conf_file_path %>
AssertFileNotEmpty     = <%= $server_file_path %>
<%- unless $assert_path_is_mount_point =~ Undef { -%>
AssertPathIsMountPoint = <%= $assert_path_is_mount_point %>
<%- } -%>

After                  = network-online.target
Requires               = network-online.target
Conflicts              = shutdown.target
Conflicts              = reboot.target
<%- unless $more_unit_entries =~ Undef { -%>
<%= $more_unit_entries %>
<%- } -%>

[Service]
Type            = exec
Environment     = PGPASSFILE=/var/lib/barman/.pgpass
ExecStartPre    =-<%= $barman_binary %> -d --log-level DEBUG -c <%= $conf_file_path %> -f json   receive-wal --create-slot     <%= $postgres_server_id %>
ExecStartPre    =-<%= $barman_binary %> -d --log-level DEBUG -c <%= $conf_file_path %> -f json   cron
ExecStartPre    =-<%= $barman_binary %> -d --log-level DEBUG -c <%= $conf_file_path %> -f json   receive-wal                   <%= $postgres_server_id %>
ExecStartPre    =-<%= $barman_binary %> -d --log-level DEBUG -c <%= $conf_file_path %> -f json   switch-wal --force --archive  <%= $postgres_server_id %>
ExecStartPre    =-<%= $barman_binary %> -d --log-level DEBUG -c <%= $conf_file_path %> -f json   check                         <%= $postgres_server_id %>
ExecStartPre    =-<%= $barman_binary %> -d --log-level DEBUG -c <%= $conf_file_path %> -f json   archive-wal                   <%= $postgres_server_id %>
ExecStart       = <%= $barman_binary %> -d --log-level DEBUG -c <%= $conf_file_path %> -f json   backup --wait                 <%= $postgres_server_id %>
ExecStartPost   =-<%= $barman_binary %> -d --log-level DEBUG -c <%= $conf_file_path %> -f json   switch-wal                    <%= $postgres_server_id %>
ExecStartPost   = <%= $barman_binary %> -d --log-level DEBUG -c <%= $conf_file_path %> -f json   list-backups                  <%= $postgres_server_id %>
ExecStopPost    = /usr/bin/sleep 20
TimeoutStartSec = 1200min
TimeoutStopSec  = 1min
RuntimeMaxSec   = 1200min
Restart         = no
StandardOutput  = journal
StandardError   = journal
User            = barman
Group           = barman
<%- unless $more_service_entries =~ Undef { -%>
<%= $more_service_entries %>
<%- } -%>

[Install]
# Service will be started via timer!
<%- unless $more_install_entries =~ Undef { -%>
<%= $more_install_entries %>
<%- } -%>


